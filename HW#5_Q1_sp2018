# Procedure Example (Nested Procedure)
# Call a function to perform n+(n-1) 
.data 
n: .word 5
F: .word  0 # store the result
.text
# put the data in the argument register. 
# arguments resisters are used to pass-parameters in the procedure (function)
lw $a0, n
la $s0, F # store the location of F to store results

# Call the sum nested_procedure
jal sum
lw $s0, 8($sp) #Restore the address of F
sw $v0, 0($s0) # store the return value (i.e result) from the function into F
j halt

#the nested_procedure (sum)

sum:
addi $sp, $sp, -12  # reserve space in the stack to store $s0, $a0 and $ra
		   # adjust stack for 3 items  
sw   $s0, 8($sp)   # store the 
sw   $ra, 4($sp)   # save return address    
sw   $a0, 0($sp)      # save argument    
slti $t0, $a0, 1      # test for n < 1    
beq  $t0, $zero, L1    
addi $s0, $zero, 0    # if so, result is 0    
jr   $ra              #   return to line 32
L1: addi $a0, $a0, -1     # else decrement n   
jal  sum       # recursive call    
addi $sp, $sp, 12     # Increment stack by 12
lw   $ra, 4($sp)      # Restore $ra
lw   $a0, 0($sp)      # restore $a0           
addu $s0, $a0, $s0    # Add to get result 
add  $v0, $s0, $zero  # Copy the result to $V0

jr   $ra              # and return
halt:
nop


  
